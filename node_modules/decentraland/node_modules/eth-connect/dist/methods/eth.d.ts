import { Method } from '../Method';
import { Property } from '../Property';
export declare namespace eth {
    const eth_getBalance: Method;
    const eth_getStorageAt: Method;
    const eth_getCode: Method;
    const eth_getBlockByHash: Method;
    const eth_getBlockByNumber: Method;
    const eth_getUncleByBlockHashAndIndex: Method;
    const eth_getUncleByBlockNumberAndIndex: Method;
    const eth_getCompilers: Method;
    const eth_getBlockTransactionCountByHash: Method;
    const eth_getBlockTransactionCountByNumber: Method;
    const eth_getUncleCountByBlockHash: Method;
    const eth_getUncleCountByBlockNumber: Method;
    const eth_getTransactionByHash: Method;
    const eth_getTransactionByBlockHashAndIndex: Method;
    const eth_getTransactionByBlockNumberAndIndex: Method;
    const eth_getTransactionReceipt: Method;
    const eth_getTransactionCount: Method;
    const eth_sendRawTransaction: Method;
    const web3_sha3: Method;
    const eth_sendTransaction: Method;
    const eth_signTransaction: Method;
    const eth_sign: Method;
    const eth_call: Method;
    const eth_estimateGas: Method;
    const eth_compileSolidity: Method;
    const eth_compileLLL: Method;
    const eth_compileSerpent: Method;
    const eth_submitWork: Method;
    const eth_getWork: Method;
    const eth_coinbase: Property;
    const eth_mining: Property;
    const eth_hashrate: Property;
    const eth_syncing: Property;
    const eth_gasPrice: Property;
    const eth_accounts: Property;
    const eth_blockNumber: Property;
    const eth_protocolVersion: Property;
    const web3_clientVersion: Property;
    const net_version: Property;
    const shh_version: Method;
    const shh_info: Method;
    const shh_setMaxMessageSize: Method;
    const shh_setMinPoW: Method;
    const shh_markTrustedPeer: Method;
    const shh_newKeyPair: Method;
    const shh_addPrivateKey: Method;
    const shh_deleteKeyPair: Method;
    const shh_hasKeyPair: Method;
    const shh_getPublicKey: Method;
    const shh_getPrivateKey: Method;
    const shh_newSymKey: Method;
    const shh_addSymKey: Method;
    const shh_generateSymKeyFromPassword: Method;
    const shh_hasSymKey: Method;
    const shh_getSymKey: Method;
    const shh_deleteSymKey: Method;
    const shh_post: Method;
    const personal_newAccount: Method;
    const personal_importRawKey: Method;
    const personal_sign: Method;
    const personal_ecRecover: Method;
    const personal_unlockAccount: Method;
    const personal_sendTransaction: Method;
    const personal_lockAccount: Method;
    const personal_listAccounts: Property;
    const net_listening: Property;
    const net_peerCount: Property;
    const eth_newFilter: Method;
    const eth_getLogs: Method;
    const eth_newBlockFilter: Method;
    const eth_newPendingTransactionFilter: Method;
    const eth_uninstallFilter: Method;
    const eth_getFilterLogs: Method;
    const eth_getFilterChanges: Method;
    const eth_submitHashrate: Method;
    const shh_newIdentity: Method;
    const shh_hasIdentity: Method;
    const shh_newGroup: Method;
    const shh_addToGroup: Method;
    const shh_newFilter: Method;
    const shh_uninstallFilter: Method;
    const shh_newMessageFilter: Method;
    const shh_deleteMessageFilter: Method;
    const shh_getLogs: Method;
    const shh_getFilterMessages: Method;
    const shh_getFilterChanges: Method;
    const shh_getMessages: Method;
    const bzz_blockNetworkRead: Method;
    const bzz_syncEnabled: Method;
    const bzz_swapEnabled: Method;
    const bzz_download: Method;
    const bzz_upload: Method;
    const bzz_retrieve: Method;
    const bzz_store: Method;
    const bzz_get: Method;
    const bzz_put: Method;
    const bzz_modify: Method;
    const bzz_hive: Property;
    const bzz_info: Property;
}
