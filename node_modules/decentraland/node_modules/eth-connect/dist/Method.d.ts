import { RequestManager } from './RequestManager';
export declare class Method {
    callName: string;
    params: number;
    inputFormatter: Function[] | null;
    outputFormatter?: Function | null;
    requestManager: RequestManager;
    constructor(options: {
        callName: string;
        params: number;
        inputFormatter?: any[];
        outputFormatter?: any;
    });
    /**
     * Should be called to check if the number of arguments is correct
     *
     * @method validateArgs
     * @param {Array} arguments
     * @throws {Error} if it is not
     */
    validateArgs(args: any[]): void;
    /**
     * Should be called to format input args of method
     *
     * @method formatInput
     * @param {Array}
     * @return {Array}
     */
    formatInput(args: any[]): any[];
    /**
     * Should be called to format output(result) of method
     *
     * @method formatOutput
     * @param {object}
     * @return {object}
     */
    formatOutput(result: any): any;
    /**
     * Should create payload from given input args
     *
     * @method toPayload
     * @param {Array} args
     * @return {object}
     */
    toPayload(args: any[]): {
        method: string;
        params: any[];
    };
    execute(requestManager: RequestManager, ...args: any[]): Promise<any>;
}
