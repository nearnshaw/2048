import { RequestManager } from './RequestManager';
export declare type PollData = {
    data: any;
    id: string;
    callback: (err, data) => void;
    uninstall: Function;
};
export declare class Poller {
    requestManager: RequestManager;
    polls: {
        [key: string]: PollData;
    };
    timeout: any;
    constructor(requestManager: RequestManager);
    /**
     * Should be used to start polling
     *
     * @method startPolling
     * @param {object} data
     * @param {number} pollId
     * @param {Function} callback
     * @param {Function} uninstall
     *
     * @todo cleanup number of params
     */
    startPolling(data: any, pollId: string, callback: (err, data) => void, uninstall: Function): void;
    /**
     * Should be used to stop polling for filter with given id
     *
     * @method stopPolling
     * @param {number} pollId
     */
    stopPolling(pollId: string | number): void;
    /**
     * Should be called to reset the polling mechanism of the request manager
     *
     * @method reset
     */
    reset(keepIsSyncing?: boolean): void;
    /**
     * Should be called to poll for changes on filter with given id
     *
     * @method poll
     */
    poll(): void;
}
