"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BillboardModes = {
    BILLBOARDMODE_NONE: 0,
    BILLBOARDMODE_X: 1,
    BILLBOARDMODE_Y: 2,
    BILLBOARDMODE_Z: 4,
    BILLBOARDMODE_ALL: 7
};
exports.TextureSamplingMode = {
    NEAREST: 1,
    BILINEAR: 2,
    TRILINEAR: 3
};
exports.TextureWrapping = {
    CLAMP: 0,
    WRAP: 1,
    MIRROR: 2
};
exports.TransparencyModes = {
    OPAQUE: 0,
    ALPHATEST: 1,
    ALPHABLEND: 2,
    ALPHATESTANDBLEND: 3
};
var Constants;
(function (Constants) {
    // DO NOT EVER CHANGE THESE VALUES
    Constants.ReplaceWholeTreeException = 'ReplaceWholeTreeException';
})(Constants = exports.Constants || (exports.Constants = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJmYWNlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9pbnRlcmZhY2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBcUJhLFFBQUEsY0FBYyxHQUFHO0lBQzVCLGtCQUFrQixFQUFFLENBQUM7SUFDckIsZUFBZSxFQUFFLENBQUM7SUFDbEIsZUFBZSxFQUFFLENBQUM7SUFDbEIsZUFBZSxFQUFFLENBQUM7SUFDbEIsaUJBQWlCLEVBQUUsQ0FBQztDQUNyQixDQUFBO0FBRVksUUFBQSxtQkFBbUIsR0FBRztJQUNqQyxPQUFPLEVBQUUsQ0FBQztJQUNWLFFBQVEsRUFBRSxDQUFDO0lBQ1gsU0FBUyxFQUFFLENBQUM7Q0FDYixDQUFBO0FBRVksUUFBQSxlQUFlLEdBQUc7SUFDN0IsS0FBSyxFQUFFLENBQUM7SUFDUixJQUFJLEVBQUUsQ0FBQztJQUNQLE1BQU0sRUFBRSxDQUFDO0NBQ1YsQ0FBQTtBQUlZLFFBQUEsaUJBQWlCLEdBQUc7SUFDL0IsTUFBTSxFQUFFLENBQUM7SUFDVCxTQUFTLEVBQUUsQ0FBQztJQUNaLFVBQVUsRUFBRSxDQUFDO0lBQ2IsaUJBQWlCLEVBQUUsQ0FBQztDQUNyQixDQUFBO0FBbUpELElBQWlCLFNBQVMsQ0FJekI7QUFKRCxXQUFpQixTQUFTO0lBQ3hCLGtDQUFrQztJQUVyQixtQ0FBeUIsR0FBRywyQkFBMkIsQ0FBQTtBQUN0RSxDQUFDLEVBSmdCLFNBQVMsR0FBVCxpQkFBUyxLQUFULGlCQUFTLFFBSXpCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgSUVudGl0eSB9IGZyb20gJy4vaW50ZXJuYWwvYXBwbHlQYXRjaCdcblxuZXhwb3J0IGludGVyZmFjZSBJU2ltcGxpZmllZE5vZGUge1xuICB0YWc6IHN0cmluZ1xuICBjaGlsZHJlbjogSVNpbXBsaWZpZWROb2RlW11cbiAgYXR0cnM6IHsgW25hbWU6IHN0cmluZ106IHN0cmluZyB8IG51bWJlcltdIHwgb2JqZWN0IHwgYm9vbGVhbiB8IG51bWJlciB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSWRlbnRpdHkge1xuICBnZXRVc2VyUHVibGljS2V5KCk6IFByb21pc2U8c3RyaW5nPlxufVxuXG5leHBvcnQgdHlwZSBMYW5kRGF0YVZlcnNpb24wID0ge1xuICB2ZXJzaW9uOiAwXG4gIG5hbWU6IHN0cmluZ1xuICBkZXNjcmlwdGlvbjogc3RyaW5nXG4gIGlwbnM6IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBMYW5kRGF0YSA9IExhbmREYXRhVmVyc2lvbjBcblxuZXhwb3J0IGNvbnN0IEJpbGxib2FyZE1vZGVzID0ge1xuICBCSUxMQk9BUkRNT0RFX05PTkU6IDAsXG4gIEJJTExCT0FSRE1PREVfWDogMSxcbiAgQklMTEJPQVJETU9ERV9ZOiAyLFxuICBCSUxMQk9BUkRNT0RFX1o6IDQsXG4gIEJJTExCT0FSRE1PREVfQUxMOiA3XG59XG5cbmV4cG9ydCBjb25zdCBUZXh0dXJlU2FtcGxpbmdNb2RlID0ge1xuICBORUFSRVNUOiAxLFxuICBCSUxJTkVBUjogMixcbiAgVFJJTElORUFSOiAzXG59XG5cbmV4cG9ydCBjb25zdCBUZXh0dXJlV3JhcHBpbmcgPSB7XG4gIENMQU1QOiAwLFxuICBXUkFQOiAxLFxuICBNSVJST1I6IDJcbn1cblxuZXhwb3J0IHR5cGUgSUJpbGxib2FyZE1vZGVzID0gMCB8IDEgfCAyIHwgMyB8IDQgfCA1IHwgNiB8IDdcblxuZXhwb3J0IGNvbnN0IFRyYW5zcGFyZW5jeU1vZGVzID0ge1xuICBPUEFRVUU6IDAsXG4gIEFMUEhBVEVTVDogMSxcbiAgQUxQSEFCTEVORDogMixcbiAgQUxQSEFURVNUQU5EQkxFTkQ6IDNcbn1cblxuZXhwb3J0IHR5cGUgSVRyYW5zcGFyZW5jeU1vZGVzID0gMCB8IDEgfCAyIHwgM1xuXG5leHBvcnQgaW50ZXJmYWNlIEFQSUxhbmQge1xuICB4OiBudW1iZXJcbiAgeTogbnVtYmVyXG4gIGRpc3RyaWN0X2lkPzogc3RyaW5nXG4gIG93bmVyOiBzdHJpbmdcbiAgZGF0YTogTGFuZERhdGFcbiAgaW5fZXN0YXRlPzogYm9vbGVhblxuICBsYXN0X3RyYW5zZmVycmVkX2F0Pzogc3RyaW5nXG59XG5cbi8vLyBodHRwczovL2dpdGh1Yi5jb20vZGVjZW50cmFsYW5kL3Byb3Bvc2Fscy9ibG9iL21hc3Rlci9kc3AvMDAyMC5tZWRpYXdpa2lcbmV4cG9ydCBpbnRlcmZhY2UgSVNjZW5lIHtcbiAgYXNzZXRzPzogUmVjb3JkPGFueSwgc3RyaW5nPlxuICBvd25lcjogc3RyaW5nXG4gIG1haW46IHN0cmluZ1xuICBzY2VuZToge1xuICAgIGJhc2U6IHN0cmluZ1xuICAgIHBhcmNlbHM6IHN0cmluZ1tdXG4gIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBJTGFuZCBleHRlbmRzIEFQSUxhbmQge1xuICBzY2VuZTogSVNjZW5lXG4gIGJhc2VVcmw6IHN0cmluZ1xuICAvLyBIVE1MIGlzIHVzZWQgYnkgdGhlIHByZXZpZXcgbG9hZGVyIHRvIHBhcnNlIHNjZW5lIGRhdGEgZGlyZWN0bHlcbiAgLy8gdG8gc3RhdGljUGFyY2VsLlxuICBodG1sPzogc3RyaW5nXG4gIHR5cGU/OiAncm9hZCcgfCAnbGFuZCcgfCAncGxhemEnXG59XG5cbi8qKlxuICogVGhpcyBkYXRhIHR5cGUgZGVmaW5lcyBhIHR3byBjb21wb25lbnQgdmVjdG9yLlxuICovXG5leHBvcnQgdHlwZSBWZWN0b3IyQ29tcG9uZW50ID0ge1xuICB4OiBudW1iZXJcbiAgeTogbnVtYmVyXG59XG5cbi8qKlxuICogVGhpcyBkYXRhIHR5cGUgZGVmaW5lcyBhIHRocmVlIGNvbXBvbmVudCB2ZWN0b3IuIEl0IGlzIHVzZWQgZm9yIHNjYWxpbmcsIHBvc2l0aW9uaW5nIGFuZCByb3RhdGlvbnNcbiAqL1xuZXhwb3J0IHR5cGUgVmVjdG9yM0NvbXBvbmVudCA9IHtcbiAgeDogbnVtYmVyXG4gIHk6IG51bWJlclxuICB6OiBudW1iZXJcbn1cblxuZXhwb3J0IHR5cGUgUXVhdGVybmlvbiA9IHtcbiAgeDogbnVtYmVyXG4gIHk6IG51bWJlclxuICB6OiBudW1iZXJcbiAgdzogbnVtYmVyXG59XG5cbmV4cG9ydCB0eXBlIFNvdW5kQ29tcG9uZW50ID0ge1xuICAvKiogRGlzdGFuY2UgZmFkaW5nIG1vZGVsLCBkZWZhdWx0OiAnbGluZWFyJyAqL1xuICBkaXN0YW5jZU1vZGVsPzogJ2xpbmVhcicgfCAnaW52ZXJzZScgfCAnZXhwb25lbnRpYWwnXG4gIC8qKiBEb2VzIHRoZSBzb3VuZCBsb29wPyBkZWZhdWx0OiBmYWxzZSAqL1xuICBsb29wPzogYm9vbGVhblxuICAvKiogVGhlIHNyYyBvZiB0aGUgc291bmQgdG8gYmUgcGxheWVkICovXG4gIHNyYzogc3RyaW5nXG4gIC8qKiBWb2x1bWUgb2YgdGhlIHNvdW5kLCB2YWx1ZXMgMCB0byAxLCBkZWZhdWx0OiAxICovXG4gIHZvbHVtZT86IG51bWJlclxuICAvKiogVXNlZCBpbiBpbnZlcnNlIGFuZCBleHBvbmVudGlhbCBkaXN0YW5jZSBtb2RlbHMsIGRlZmF1bHQ6IDEgKi9cbiAgcm9sbG9mZkZhY3Rvcj86IG51bWJlclxuICAvKiogSXMgdGhlIHNvdW5kIHBsYXlpbmc/LCBkZWZhdWx0OiB0cnVlICovXG4gIHBsYXlpbmc/OiBib29sZWFuXG59XG5cbmV4cG9ydCB0eXBlIFRyYW5zaXRpb25WYWx1ZSA9IHtcbiAgZHVyYXRpb246IG51bWJlclxuICB0aW1pbmc/OiBUaW1pbmdGdW5jdGlvblxuICBkZWxheT86IG51bWJlclxufVxuXG5leHBvcnQgdHlwZSBUaW1pbmdGdW5jdGlvbiA9XG4gIHwgJ2xpbmVhcidcbiAgfCAnZWFzZS1pbidcbiAgfCAnZWFzZS1vdXQnXG4gIHwgJ2Vhc2UtaW4tb3V0J1xuICB8ICdxdWFkcmF0aWMtaW4nXG4gIHwgJ3F1YWRyYXRpYy1vdXQnXG4gIHwgJ3F1YWRyYXRpYy1pbm91dCdcbiAgfCAnY3ViaWMtaW4nXG4gIHwgJ2N1YmljLW91dCdcbiAgfCAnY3ViaWMtaW5vdXQnXG4gIHwgJ3F1YXJ0aWMtaW4nXG4gIHwgJ3F1YXJ0aWMtb3V0J1xuICB8ICdxdWFydGljLWlub3V0J1xuICB8ICdxdWludGljLWluJ1xuICB8ICdxdWludGljLW91dCdcbiAgfCAncXVpbnRpYy1pbm91dCdcbiAgfCAnc2luLWluJ1xuICB8ICdzaW4tb3V0J1xuICB8ICdzaW4taW5vdXQnXG4gIHwgJ2V4cG9uZW50aWFsLWluJ1xuICB8ICdleHBvbmVudGlhbC1vdXQnXG4gIHwgJ2V4cG9uZW50aWFsLWlub3V0J1xuICB8ICdib3VuY2UtaW4nXG4gIHwgJ2JvdW5jZS1vdXQnXG4gIHwgJ2JvdW5jZS1pbm91dCdcbiAgfCAnZWxhc3RpYy1pbidcbiAgfCAnZWxhc3RpYy1vdXQnXG4gIHwgJ2VsYXN0aWMtaW5vdXQnXG4gIHwgJ2NpcmN1bGFyLWluJ1xuICB8ICdjaXJjdWxhci1vdXQnXG4gIHwgJ2NpcmN1bGFyLWlub3V0J1xuICB8ICdiYWNrLWluJ1xuICB8ICdiYWNrLW91dCdcbiAgfCAnYmFjay1pbm91dCdcblxuZXhwb3J0IHR5cGUgVHJhbnNpdGlvbkNvbXBvbmVudCA9IHtcbiAgcG9zaXRpb24/OiBUcmFuc2l0aW9uVmFsdWVcbiAgcm90YXRpb24/OiBUcmFuc2l0aW9uVmFsdWVcbiAgc2NhbGU/OiBUcmFuc2l0aW9uVmFsdWVcbiAgY29sb3I/OiBUcmFuc2l0aW9uVmFsdWVcbiAgbG9va0F0PzogVHJhbnNpdGlvblZhbHVlXG59XG5cbmV4cG9ydCB0eXBlIFNrZWxldGFsQW5pbWF0aW9uVmFsdWUgPSB7XG4gIC8qKlxuICAgKiBOYW1lIG9yIGluZGV4IG9mIHRoZSBhbmltYXRpb24gaW4gdGhlIG1vZGVsXG4gICAqL1xuICBjbGlwOiBzdHJpbmcgfCBudW1iZXJcblxuICAvKipcbiAgICogRG9lcyB0aGUgYW5pbWF0aW9uIGxvb3A/LCBkZWZhdWx0OiB0cnVlXG4gICAqL1xuICBsb29wPzogYm9vbGVhblxuXG4gIC8qKlxuICAgKiBXZWlnaHQgb2YgdGhlIGFuaW1hdGlvbiwgdmFsdWVzIGZyb20gMCB0byAxLCB1c2VkIHRvIGJsZW5kIHNldmVyYWwgYW5pbWF0aW9ucy4gZGVmYXVsdDogMVxuICAgKi9cbiAgd2VpZ2h0PzogbnVtYmVyXG5cbiAgLyoqXG4gICAqIElzIHRoZSBhbmltYXRpb24gcGxheWluZz8gZGVmYXVsdDogdHJ1ZVxuICAgKi9cbiAgcGxheWluZz86IGJvb2xlYW5cbn1cblxuZXhwb3J0IHR5cGUgU2tlbGV0YWxBbmltYXRpb25Db21wb25lbnQgPSBTa2VsZXRhbEFuaW1hdGlvblZhbHVlW11cblxuZXhwb3J0IG5hbWVzcGFjZSBDb25zdGFudHMge1xuICAvLyBETyBOT1QgRVZFUiBDSEFOR0UgVEhFU0UgVkFMVUVTXG5cbiAgZXhwb3J0IGNvbnN0IFJlcGxhY2VXaG9sZVRyZWVFeGNlcHRpb24gPSAnUmVwbGFjZVdob2xlVHJlZUV4Y2VwdGlvbidcbn1cbiJdfQ==