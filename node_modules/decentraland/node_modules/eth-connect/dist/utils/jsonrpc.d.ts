export declare let messageId: number;
export declare type RPCSendableMessage = {
    method: string;
    params: any[];
};
/**
 * Should be called to valid json create payload object
 *
 * @method toPayload
 * @param {Function} method of jsonrpc call, required
 * @param {Array} params, an array of method params, optional
 * @returns {object} valid jsonrpc payload object
 */
export declare function toPayload(method: string, params: any[]): {
    jsonrpc: string;
    id: number;
    method: string;
    params: any[];
};
/**
 * Should be called to check if jsonrpc response is valid
 *
 * @method isValidResponse
 * @param {object}
 * @returns {Boolean} true if response is valid, otherwise false
 */
export declare function isValidResponse(response: any): boolean;
/**
 * Should be called to create batch payload object
 *
 * @method toBatchPayload
 * @param {Array} messages, an array of objects with method (required) and params (optional) fields
 * @returns {Array} batch payload
 */
export declare function toBatchPayload(messages: RPCSendableMessage[]): {
    jsonrpc: string;
    id: number;
    method: string;
    params: any[];
}[];
