"use strict";
/*
    This file is part of web3.js.

    web3.js is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    web3.js is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
Object.defineProperty(exports, "__esModule", { value: true });
function InvalidNumberOfSolidityArgs(given, expected) {
    return new Error(`Invalid number of arguments to Solidity function. given: ${given}, expected: ${expected}`);
}
exports.InvalidNumberOfSolidityArgs = InvalidNumberOfSolidityArgs;
function InvalidNumberOfRPCParams(methodName, given, expected) {
    return new Error(`Invalid number of input parameters to RPC method "${methodName}" given: ${given}, expected: ${expected}`);
}
exports.InvalidNumberOfRPCParams = InvalidNumberOfRPCParams;
function InvalidConnection(host) {
    return new Error("CONNECTION ERROR: Couldn't connect to node " + host + '.');
}
exports.InvalidConnection = InvalidConnection;
function InvalidProvider() {
    return new Error('Provider not set or invalid');
}
exports.InvalidProvider = InvalidProvider;
function InvalidResponse(result) {
    let message = !!result && !!result.error && !!result.error.message
        ? result.error.message
        : 'Invalid JSON RPC response: ' + JSON.stringify(result);
    return new Error(message);
}
exports.InvalidResponse = InvalidResponse;
function ConnectionTimeout(ms) {
    return new Error('CONNECTION TIMEOUT: timeout of ' + ms + ' ms achived');
}
exports.ConnectionTimeout = ConnectionTimeout;
//# sourceMappingURL=errors.js.map