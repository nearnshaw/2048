/**
 * SolidityParam object prototype.
 * Should be used when encoding, decoding solidity bytes
 */
export declare class SolidityParam {
    value: any;
    offset: number;
    constructor(value: any, offset?: number);
    /**
     * This method should be called to check if param has dynamic size.
     * If it has, it returns true, otherwise false
     *
     * @method isDynamic
     * @returns {Boolean}
     */
    isDynamic(): boolean;
    /**
     * This method should be called to transform offset to bytes
     *
     * @method offsetAsBytes
     * @returns {string} bytes representation of offset
     */
    offsetAsBytes(): string;
    /**
     * This method should be called to get static part of param
     *
     * @method staticPart
     * @returns {string} offset if it is a dynamic param, otherwise value
     */
    staticPart(): any;
    /**
     * This method should be called to get dynamic part of param
     *
     * @method dynamicPart
     * @returns {string} returns a value if it is a dynamic param, otherwise empty string
     */
    dynamicPart(): any;
    /**
     * This method should be called to encode param
     *
     * @method encode
     * @returns {string}
     */
    encode(): any;
}
