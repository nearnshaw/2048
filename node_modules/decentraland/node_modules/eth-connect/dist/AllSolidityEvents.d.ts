import { RequestManager } from './RequestManager';
import { Contract } from './Contract';
import { EthFilter } from './Filter';
import { FilterOptions } from './Schema';
export declare class AllSolidityEvents {
    _requestManager: RequestManager;
    _json: any;
    _address: string;
    constructor(_requestManager: RequestManager, _json: any, _address: string);
    encode(options?: {
        fromBlock?;
        toBlock?;
    }): {
        address: string;
    };
    decode(data: {
        data: string;
        topics: string[];
        address: string;
    }): any;
    execute(options: FilterOptions): Promise<EthFilter<any>>;
    attachToContract(contract: Contract): void;
}
